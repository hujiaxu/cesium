// Base64 to ArrayBuffer
const base64 = "wMqRP4DCdbwAJRG/wMqRP4DCdbwAJRG/wMqRP4DCdbwAJRG/wMqRv4DCdbwAJRG/wMqRv4DCdbwAJRG/wMqRv4DCdbwAJRG/wMqRP6DCdTwAJRG/wMqRP6DCdTwAJRG/wMqRP6DCdTwAJRG/wMqRv6DCdTwAJRG/wMqRv6DCdTwAJRG/wMqRv6DCdTwAJRG/wMqRP4DCdbwAKBE/wMqRP4DCdbwAKBE/wMqRP4DCdbwAKBE/wMqRP6DCdTwAKBE/wMqRP6DCdTwAKBE/wMqRP6DCdTwAKBE/wMqRv4DCdbwAKBE/wMqRv4DCdbwAKBE/wMqRv4DCdbwAKBE/wMqRv6DCdTwAKBE/wMqRv6DCdTwAKBE/wMqRv6DCdTwAKBE/AAAAAAAAAAAAAIC/AAAAAAAAgL8AAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIC/AAAAAAAAgL8AAAAAAACAvwAAAAAAAAAAAAAAAAAAAAAAAIC/AAAAAAAAgD8AAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIC/AAAAAAAAgD8AAAAAAACAvwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAgL8AAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAgD8AAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAgL8AAAAAAACAvwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAgD8AAAAAAACAvwAAAAAAAAAAAAADAAYABgADAAkADgACABEAEQACAAgAEgAMABUAFQAMAA8ABQAUAAsACwAUABcACgAWAAcABwAWABAAEwAEAA0ADQAEAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAIBAAAAAAAAAAAAAAMBAAAAAAAAAAAAAAABBAAAAAAAAAAAAACBBAAAAAAAAAAAAAEBBAAAAAAAAAAAAAGBBAAAAAAAAAAAAAIBBAAAAAAAAAAAAAJBBAACgQAAAAAAAAAAAAACgQAAAAAAAAABAAACgQAAAAAAAAIBAAACgQAAAAAAAAMBAAACgQAAAAAAAAABBAACgQAAAAAAAACBBAACgQAAAAAAAAEBBAACgQAAAAAAAAGBBAACgQAAAAAAAAIBBAACgQAAAAAAAAJBBAAAgQQAAAAAAAAAAAAAgQQAAAAAAAABAAAAgQQAAAAAAAIBAAAAgQQAAAAAAAMBAAAAgQQAAAAAAAABBAAAgQQAAAAAAACBBAAAgQQAAAAAAAEBBAAAgQQAAAAAAAGBBAAAgQQAAAAAAAIBBAAAgQQAAAAAAAJBBAABwQQAAAAAAAAAAAABwQQAAAAAAAABAAABwQQAAAAAAAIBAAABwQQAAAAAAAMBAAABwQQAAAAAAAABBAABwQQAAAAAAACBBAABwQQAAAAAAAEBBAABwQQAAAAAAAGBBAABwQQAAAAAAAIBBAABwQQAAAAAAAJBBAACgQQAAAAAAAAAAAACgQQAAAAAAAABAAACgQQAAAAAAAIBAAACgQQAAAAAAAMBAAACgQQAAAAAAAABBAACgQQAAAAAAACBBAACgQQAAAAAAAEBBAACgQQAAAAAAAGBBAACgQQAAAAAAAIBBAACgQQAAAAAAAJBBAADIQQAAAAAAAAAAAADIQQAAAAAAAABAAADIQQAAAAAAAIBAAADIQQAAAAAAAMBAAADIQQAAAAAAAABBAADIQQAAAAAAACBBAADIQQAAAAAAAEBBAADIQQAAAAAAAGBBAADIQQAAAAAAAIBBAADIQQAAAAAAAJBBAADwQQAAAAAAAAAAAADwQQAAAAAAAABAAADwQQAAAAAAAIBAAADwQQAAAAAAAMBAAADwQQAAAAAAAABBAADwQQAAAAAAACBBAADwQQAAAAAAAEBBAADwQQAAAAAAAGBBAADwQQAAAAAAAIBBAADwQQAAAAAAAJBBAAAMQgAAAAAAAAAAAAAMQgAAAAAAAABAAAAMQgAAAAAAAIBAAAAMQgAAAAAAAMBAAAAMQgAAAAAAAABBAAAMQgAAAAAAACBBAAAMQgAAAAAAAEBBAAAMQgAAAAAAAGBBAAAMQgAAAAAAAIBBAAAMQgAAAAAAAJBBAAAgQgAAAAAAAAAAAAAgQgAAAAAAAABAAAAgQgAAAAAAAIBAAAAgQgAAAAAAAMBAAAAgQgAAAAAAAABBAAAgQgAAAAAAACBBAAAgQgAAAAAAAEBBAAAgQgAAAAAAAGBBAAAgQgAAAAAAAIBBAAAgQgAAAAAAAJBBAAA0QgAAAAAAAAAAAAA0QgAAAAAAAABAAAA0QgAAAAAAAIBAAAA0QgAAAAAAAMBAAAA0QgAAAAAAAABBAAA0QgAAAAAAACBBAAA0QgAAAAAAAEBBAAA0QgAAAAAAAGBBAAA0QgAAAAAAAIBBAAA0QgAAAAAAAJBB";
const binaryString = atob(base64);
const len = binaryString.length;
const bytes = new Uint8Array(len);
for (let i = 0; i < len; i++) {
  bytes[i] = binaryString.charCodeAt(i);
}
const buffer = bytes.buffer;
const bufferView = {
  buffer:0,
  byteLength:288,
  byteOffset: 0,
  byteStride: 12,
  target: 34962
};

const accessor = {
  bufferView: 0,
  byteOffset: 0,
  componentType: 5126,
  count: 24,
  "type": "VEC3",
};

// 从偏移量240开始解析数据
const byteOffset = bufferView.byteOffset + accessor.byteOffset;
const float32Array = new Float32Array(buffer, byteOffset, accessor.count * 3); // 16个VEC3，每个VEC3有3个float

// 打印解析出的VEC3数据
for (let i = 0; i < float32Array.length; i += 3) {
  console.log(`VEC3 [${i / 3}]: (${float32Array[i]}, ${float32Array[i + 1]}, ${float32Array[i + 2]})`);
}
